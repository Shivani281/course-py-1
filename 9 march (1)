{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "92f75f25-7bcc-4a4f-9289-1236ca960f42",
   "metadata": {},
   "outputs": [],
   "source": [
    "Q1. What is Bayes' theorem?\n",
    "\n",
    "Bayes' theorem is a fundamental concept in probability theory and statistics. It provides a way to update our beliefs or probabilities about an event based on new evidence or information. In essence, it describes how to calculate the probability of an event, given our prior knowledge and new observed data.\n",
    "\n",
    "Q2. What is the formula for Bayes' theorem?\n",
    "\n",
    "The formula for Bayes' theorem is as follows\n",
    "P(A∣B)= P(B∣A)⋅P(A)/P(B)\n",
    "\n",
    "Where:\n",
    "P(A∣B) is the posterior probability of event A occurring given that event B has occurred.\n",
    "\n",
    "P(B∣A) is the probability of event B occurring given that event A has occurred.\n",
    "\n",
    "P(A) is the prior probability of event A occurring (our initial be\n",
    "P(B) is the marginal probability of event B occurring (the total probability of event B, regardless of the occurrence of A).\n",
    "Q3. How is Bayes' theorem used in practice?\n",
    "\n",
    "Bayes' theorem is used in various fields and applications, including:\n",
    "\n",
    "Statistics: Bayes' theorem is fundamental in Bayesian statistics, where it is used to update probability distributions as new data becomes available. Bayesian methods are particularly useful when dealing with small sample sizes or when prior information is available.\n",
    "\n",
    "Machine Learning: In machine learning, Bayes' theorem is applied in Bayesian classifiers, such as Naive Bayes, which are used for classification tasks. It helps calculate the probability of a particular class given the observed features.\n",
    "\n",
    "Natural Language Processing: Bayes' theorem is used in spam email filters, sentiment analysis, and text classification, where it helps determine the probability of a text belonging to a specific category.\n",
    "\n",
    "Medical Diagnosis: In medical diagnosis, Bayesian networks are used to model the relationships between symptoms, diseases, and test results to estimate the probability of a patient having a particular condition.\n",
    "\n",
    "Finance: Bayes' theorem is employed in financial modeling and risk assessment to update predictions and probabilities based on changing market conditions and new data.\n",
    "\n",
    "Scientific Research: Bayesian inference is used in scientific research to update hypotheses and models based on experimental or observational data.\n",
    "\n",
    "Q4. What is the relationship between Bayes' theorem and conditional probability?\n",
    "\n",
    "Bayes' theorem is closely related to conditional probability. Conditional probability quantifies the likelihood of an event occurring given that another event has already occurred. Bayes' theorem extends this concept by allowing us to update our prior beliefs or probabilities based on new information.\n",
    "\n",
    "The relationship between Bayes' theorem and conditional probability can be seen in the formula:\n",
    "P(A∣B)= P(B∣A)⋅P(A)/P(B)\n",
    "Here:\n",
    "P(A∣B) is the conditional probability of event A given event B.\n",
    "P(B∣A) is the conditional probability of event B given event A.\n",
    "P(A) is the prior probability of event A (our initial belief).\n",
    "P(B) is the marginal probability of event B (the total probability of event B, regardless of the occurrence of A).\n",
    "Bayes' theorem provides a systematic way to calculate \n",
    "P(A∣B) by combining \n",
    "P(B∣A),P(A), and P(B). It allows us to update our beliefs about A based on the observed evidence B.\n",
    "\n",
    "Q5. How do you choose which type of Naive Bayes classifier to use for any given problem?\n",
    "\n",
    "The choice of which type of Naive Bayes classifier to use for a given problem depends on the nature of the data and the assumptions that can reasonably be made about the data. Here are guidelines for choosing the appropriate Naive Bayes variant:\n",
    "\n",
    "Bernoulli Naive Bayes:\n",
    "\n",
    "Data Type: Use Bernoulli Naive Bayes for binary or boolean data, where each feature represents the presence (1) or absence (0) of a particular attribute or word in a document.\n",
    "Example Applications: Spam detection (word present or not), sentiment analysis (word present or not in a text), document categorization.\n",
    "Multinomial Naive Bayes:\n",
    "\n",
    "Data Type: Use Multinomial Naive Bayes for discrete data with multiple categories or levels, typically word counts or term frequencies (integer values).\n",
    "Example Applications: Text classification (e.g., spam or not spam based on word frequencies), topic categorization, sentiment analysis with word frequencies.\n",
    "Gaussian Naive Bayes:\n",
    "\n",
    "Data Type: Use Gaussian Naive Bayes for continuous or real-valued data that approximately follows a Gaussian (normal) distribution.\n",
    "Example Applications: Continuous data classification, such as medical diagnosis based on measurements like blood pressure and temperature.\n",
    "Choosing Based on Data Distribution:\n",
    "\n",
    "Examine the distribution of your data: If your data closely resembles one of the distribution types (Bernoulli, Multinomial, or Gaussian), it's often a good choice to use the corresponding Naive Bayes variant.\n",
    "Data Transformation: In some cases, you can transform data to make it more suitable for a specific Naive Bayes variant. For instance, you can convert continuous data to discrete bins for Multinomial Naive Bayes.\n",
    "Cross-Validation: Perform cross-validation and compare the performance of different Naive Bayes variants on your specific problem. The variant that yields the best results (e.g., highest accuracy or other relevant metrics) should be chosen.\n",
    "\n",
    "Assumptions: Consider the assumptions made by each variant. For example, Naive Bayes assumes independence between features. Ensure that the independence assumption aligns with your problem's characteristics.\n",
    "\n",
    "In practice, it's common to try multiple variants and evaluate their performance to determine which one works best for a given problem.\n",
    "\n",
    "Q6. Assignment:\n",
    "\n",
    "To predict the class (either A or B) for a new instance with features \n",
    "X1=3 and X2=4, we can use the Naive Bayes classifier with the provided training data. We will calculate the conditional probabilities for each class and choose the class with the higher probability.\n",
    "\n",
    "Here are the steps:\n",
    "\n",
    "Calculate the prior probabilities for classes A and B based on the provided frequency table:\n",
    "p(Class A)=Number of samples in Class A/Total number of samples=10/13\n",
    "p(Class B)=Number of samples in Class B/Total number of samples=3/13\n",
    " \n",
    "Calculate the conditional probabilities for \n",
    "X1=3 and X2=4 for each class:\n",
    "p(x1=3∣Class A)=Number of samples in Class A with X1 = 3/Total number of samples in Class A=4/10\n",
    " p(x2=4∣Class A)=Number of samples in Class A with X2 = 4/Total number of samples in Class A=3/10\n",
    " p(x1=3∣Class B)=Number of samples in Class B with X1 = 3/Total number of samples in Class B=1/3\n",
    " p(x2=4∣Class A)=Number of samples in Class B with X1 = 3/Total number of samples in Class B=1/3\n",
    " \n",
    "Calculate the unnormalized posterior probabilities for each class:\n",
    "\n",
    "(Class A∣1=3,2=4)∝(Class A)⋅(1=3∣Class A)⋅(2=4∣Class A)\n",
    "P(Class A∣X1=3,X2=4)∝P(Class A)⋅P(X1=3∣Class A)⋅P(X2=4∣Class A)\n",
    "(Class B∣1=3,2=4)∝(Class B)⋅(1=3∣Class B)⋅(2=4∣Class B)\n",
    "(Class A∣1=3,2=4)=(Class A∣1=3,2=4)(Class A∣1=3,2=4)+(Class B∣x1=3,x2=4)\n",
    "P(Class B∣X1=3,X2=4)∝P(Class B)⋅P(X1=3∣Class B)⋅P(X2=4∣Class B)\n",
    "Normalize the posterior probabilities to sum to 1:\n",
    "(Class A∣1=3,2=4)=(Class A∣1=3,2=4)(Class A∣1=3,2=4)+(Class B∣x1=3,x2=4)\n",
    "P(Class A∣X1=3,X2=4)= P(Class A∣X1=3,X2=4)/P(Class A∣X1=3,X2=4)+P(Class B∣X1=3,X2=4)\n",
    "​(Class B∣x1=3,x2=4)=p(Class A∣x1=3,x2=4)/p(Class A∣x1=3,x2=4)+p(Class B∣x1=3,x2=4)\n",
    "\n",
    " \n",
    "Compare the normalized posterior probabilities for classes A and B and choose the class with the higher probability.\n",
    "\n",
    "After performing the calculations, you can determine which class Naive Bayes would predict the new instance to belong to.\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
